version: '3.7'

services:
  naming-service:
    image: naming-service
    ports:
      - "8761:8761"
    networks:
      - notification-network
    links:
      - fluentd
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224
        fluentd-async-connect: "true"
        tag: docker.{{.Name}}

#  notification-service:
#    image: notification-service
#    ports:
#      - "8000:8000"
#    environment:
#      EUREKA.CLIENT.SERVICEURL.DEFAULTZONE: http://naming-service:8761/eureka
#      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/notification
#      SPRING_DATASOURCE_USERNAME: postgres
#      SPRING_DATASOURCE_PASSWORD: postgres
#    networks:
#      - notification-network
#    depends_on:
#      - naming-service
#      - postgres
#    links:
#      - fluentd
#    logging:
#        driver: "fluentd"
#        options:
#            fluentd-address: localhost:24224
#            fluentd-async-connect: "true"
#            tag: docker.{{.Name}}
#  sender-service:
#    image: sender-service
#    ports:
#      - "8100:8100"
#    environment:
#      EUREKA.CLIENT.SERVICEURL.DEFAULTZONE: http://naming-service:8761/eureka
#    networks:
#      - notification-network
#    depends_on:
#      - naming-service
#    links:
#      - fluentd
#    logging:
#      driver: "fluentd"
#      options:
#        fluentd-address: localhost:24224
#        fluentd-async-connect: "true"
#        tag: docker.{{.Name}}
  postgres:
    image: postgres:latest
    hostname: postgres
    ports:
      - "5435:5432"
    networks:
      - notification-network
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=notification
    links:
      - fluentd
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224
        fluentd-async-connect: "true"
        tag: docker.{{.Name}}
  pgadmin:
    image: dpage/pgadmin4
    ports:
      - "80:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    networks:
      - notification-network
    links:
      - fluentd
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224
        fluentd-async-connect: "true"
        tag: docker.{{.Name}}
  zookeeper:
    image: docker.io/bitnami/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    links:
      - fluentd
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224
        fluentd-async-connect: "true"
        tag: docker.{{.Name}}
  kafka:
    image: docker.io/bitnami/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    expose:
      - "9093"
    environment:
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: 'yes'
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper
    links:
      - fluentd
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224
        fluentd-async-connect: "true"
        tag: docker.{{.Name}}
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "9090:8080"
    restart: always
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9093
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.13
    hostname: elasticsearch
    container_name: elasticsearch
    volumes:
      - ./elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    ports:
      - "9200:9200"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      bootstrap.memory_lock: "true"
      discovery.type: single-node
    expose:
      - "9200"
    ulimits:
      memlock:
        soft: -1
        hard: -1
  fluentd:
    build: ./fluentd
    volumes:
      - ./fluentd/conf:/fluentd/etc
    links:
      - "elasticsearch"
    ports:
      - "24224:24224"
      - "24224:24224/udp"
    depends_on:
      - elasticsearch
  kibana:
      image: docker.elastic.co/kibana/kibana:7.17.13
      volumes:
        - ./kibana/:/usr/share/kibana/config/
      ports:
        - "5601:5601"
      depends_on:
        - elasticsearch
  wiremock:
    image: wiremock/wiremock
    ports:
      - "8081:8080"
    volumes:
      - ./WireMock:/home/wiremock/mappings/
    networks:
      - notification-network
networks:
    notification-network:
        driver: bridge
